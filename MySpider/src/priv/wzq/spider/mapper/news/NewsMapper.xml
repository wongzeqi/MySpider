<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="priv.wzq.spider.mapper.news.NewsMapper">
  <resultMap id="BaseResultMap" type="priv.wzq.spider.model.news.News">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="from" property="from" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="discription" property="discription" jdbcType="VARCHAR" />
    <result column="view" property="view" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="newsContentHref" property="newscontenthref" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="priv.wzq.spider.model.news.News" extends="BaseResultMap" >
    <result column="newsContent" property="newscontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, date, from, sort, discription, view, img, newsContentHref
  </sql>
  <sql id="Blob_Column_List" >
    newsContent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="priv.wzq.spider.model.news.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="priv.wzq.spider.model.news.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="priv.wzq.spider.model.news.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="priv.wzq.spider.model.news.News" >
    insert into news (id, title, date, 
      from, sort, discription, 
      view, img, newsContentHref, 
      newsContent)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, 
      #{from,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR}, #{discription,jdbcType=VARCHAR}, 
      #{view,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{newscontenthref,jdbcType=VARCHAR}, 
      #{newscontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="priv.wzq.spider.model.news.News" >
  	<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
    	SELECT LAST_INSERT_ID()   
    </selectKey>
  
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="from != null" >
        from,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="discription != null" >
        discription,
      </if>
      <if test="view != null" >
        view,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="newscontenthref != null" >
        newsContentHref,
      </if>
      <if test="newscontent != null" >
        newsContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="from != null" >
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="discription != null" >
        #{discription,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        #{view,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="newscontenthref != null" >
        #{newscontenthref,jdbcType=VARCHAR},
      </if>
      <if test="newscontent != null" >
        #{newscontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="priv.wzq.spider.model.news.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.from != null" >
        from = #{record.from,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.discription != null" >
        discription = #{record.discription,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null" >
        view = #{record.view,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.newscontenthref != null" >
        newsContentHref = #{record.newscontenthref,jdbcType=VARCHAR},
      </if>
      <if test="record.newscontent != null" >
        newsContent = #{record.newscontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update news
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      from = #{record.from,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      discription = #{record.discription,jdbcType=VARCHAR},
      view = #{record.view,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      newsContentHref = #{record.newscontenthref,jdbcType=VARCHAR},
      newsContent = #{record.newscontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      from = #{record.from,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      discription = #{record.discription,jdbcType=VARCHAR},
      view = #{record.view,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      newsContentHref = #{record.newscontenthref,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="priv.wzq.spider.model.news.News" >
    update news
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="from != null" >
        from = #{from,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="discription != null" >
        discription = #{discription,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="newscontenthref != null" >
        newsContentHref = #{newscontenthref,jdbcType=VARCHAR},
      </if>
      <if test="newscontent != null" >
        newsContent = #{newscontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="priv.wzq.spider.model.news.News" >
    update news
    set title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      from = #{from,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      discription = #{discription,jdbcType=VARCHAR},
      view = #{view,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      newsContentHref = #{newscontenthref,jdbcType=VARCHAR},
      newsContent = #{newscontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.wzq.spider.model.news.News" >
    update news
    set title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      from = #{from,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR},
      discription = #{discription,jdbcType=VARCHAR},
      view = #{view,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      newsContentHref = #{newscontenthref,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAllNews" resultType="priv.wzq.spider.model.news.News">
  	select * from news order by date desc
  </select>
  
  <select id="searchNews" resultType="priv.wzq.spider.model.news.News" parameterType="string">
  	select * from news where title like '%${value}%'
  </select>
  
  <select id="getNewsDetailById" parameterType="int" resultType="priv.wzq.spider.model.news.News">
  	select * from news where id = #{id}
  </select>
</mapper>